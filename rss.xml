<!-- LB -->

<item>
<title>How this Website is Hosted</title>
<guid>https://jacobwoods.xyz/rblog.html#how-this-website-is-hosted.html</guid>
<pubDate>Tue, 19 Mar 2019 15:44:02 -0700</pubDate>
<description><![CDATA[
<p>
For my first real blog entry, I am going to write about <i>how</i> I am hosting this website. It is currently costing me a whole $2 a year to keep up, in total. The first thing I did was, well, make the 
website. This is the bulk of the process. If you are making a personal website, however, I would say this step should not be difficult at all. For 99% of "personal sites" (like this) pretty much nothing
other HTML+CSS is necessary. If you don't already know how to write in HTML and CSS, don't worry, it literally requires the intellect of an ape. <a href="https://www.w3schools.com/">This site</a> has some
pretty good guides on writing both HTML and CSS. For the blog, you can very easily just manualy write your own blog and change the blog html file for each new entry. However, a very convenient sub-80 line
script called <a href="https://www.github.com/lukesmithxyz/lb">lb</a> exists for this very purpose. The script lets you write blog posts in their own files, then automatically adds them to an rss feed, 
rolling blog, and generates standalone pages for each of them. I have found the script to be tremendously useful, and I am using it with this website. Once you have made your website, if you are writing a
very simple personal site (like this one) you can host your site with <a href="https://pages.github.com/">github pages</a> (or gitlab pages, I guess). This website is being hosted on the github page of 
github profile <i>notcomfy321</i>. (Because my main github profile's github pages is my browser homepage). Once your site is on github pages, buy a domain (must be apex or www). I bought one from
<a href="https://www.epik.com/">epik</a>, although I cannot reccomend it. You can use a plethora of other domain providers, such as NameCheap or BarelyFreeSpeach. Next, follow the directions 
<a href="https://help.github.com/en/articles/using-a-custom-domain-with-github-pages">here</a> to have your url point to the github pages site. In my case, I had to change the A records of my domain to 
point to GitHub and added a CNAME to my directory with my url on it. And... that's pretty much it. It was incredibly simple and easy process. Of course, the use of a github pages site does limit the
flexibility and power of your site. However, referencing my previous point, I do not believe that a personal site really needs anything other than HTML and CSS. I would argue that there are some benefits 
from hosting your site on Github Pages. Your website is kept on a git repository, meaning that every time you commit to that repository, your website will update immediately. You can also edit the site
from any device, anywhere. You can add more contributors too, who can also commit changes to your website, if you desire.
</p>
]]></description>
</item>



















